;поэлементное произведение элементов 2 массивов
;регистр A0 содержит конечную сумму произведений
;параллельные вычисления не используются

 .ref _c_int00     ;точка входа
_c_int00:
	
;///////////////////////////////////////	
 .data   ;секция данных
 
array1:	.int 1,2,3;,4,5,6    ;создаем массив 32 разрядных чисел
array2:	.int 1,2,3;,4,5,6 ;создаем массив 32 разрядных чисел
size    .set 3		  	 	;размер массива(>1)(препроцессорная константа)  	


;///////////////////////////////////////
 .text   ;секция кода 
 


        ;Инициализация:
 		MVKL .S1 array1,A3    ;загружаем адрес массива1 в A3
		MVKH .S1 array1,A3
		
		MVKL .S1 array2,A7    ;загружаем адрес массива2 в A7
		MVKH .S1 array2,A7
		
		MVK .S1 size,A2    ;загружаем колво элементов массива в A2
		MVK .S1 0,A4	   ;ПРОИЗВЕДЕНИЕ ТЕКУЩИХ элементов массива	
		MVK .S1 0,A0	   ;сумма произведений
		MVK .S2 0,B2	   ; тек. элемент выбираемый из массива 1
		MVK .S1 0,A5	   ; тек. элемент выбираемый из массива 1
		


LOOP:
		SUB .L1 A2,1,A2      	;A2 := A2 - 1				
		LDW   .D1  *A3[A2], B2	;загружаем текущий элемент в B2         
		NOP 4					;4х тактовая задержка загрузки 
		LDW   .D1  *A7[A2], A5	;загружаем текущий элемент в A2         
		NOP 4					;4х тактовая задержка загрузки 
		MPY .M1X A5,B2,A4   	;умножение элементов массивов  
		NOP 
		ADD .L1 A0, A4,A0		;сумма результатов умножения  
		[A2] B .S1 LOOP			;переход если A2 <> 0  
		NOP 5
	

    
 	